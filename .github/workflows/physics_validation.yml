
name: Physics Validation

# Manually launch this action via GitHub
on: 
  workflow_dispatch:
    inputs:
      base:
        description: 'Production Image to Compare Against'
        required: true
        default: 'ldmx/pro:v2.3.0'

jobs:
  physics-validation:
    runs-on: ubuntu-latest
    env:
      image: ldmx/dev:latest #define image to rbuild ldmx-sw and run tests on
    defaults:
      run:
        shell: bash

    steps:
    # check out ldmx-sw in the workspace
    - uses: actions/checkout@v2
    - uses: textbook/git-checkout-submodule-action@master

    # Setup our ldmx development environment
    - name: Setup ldmx environment
      run: docker pull $image
    
    # configure ldmx-sw using the docker environment
    - name: Configure the build
      run: |
          mkdir build &&
          docker run -i -v $(pwd):$(pwd) $image $(pwd)/build cmake ..

    # build ldmx-sw using the docker environment
    - name: Build and Install
      run: docker run -i -v $(pwd):$(pwd) $image $(pwd)/build make install

    # Run the test using ctest. The --verbose parameter displays the output 
    # you would typically see with catch.
    - name: Test the build
      run: |
          cd ../ &&
          export LDMX_BASE=$(pwd) &&
          docker run -i -e LDMX_BASE -v $(pwd):$(pwd) $image $LDMX_BASE/ldmx-sw/build ctest --verbose 

    # Actually run validation script
    - name: Physics Validation
      run: bash .github/workflows/physics_validation.sh ${{ github.event.inputs.base }}

    # Persist output of more full validation tests
    - uses: actions/upload-artifact@v2
      with:
        name: Physics Validation
        path: .github/workflows/plots/**

