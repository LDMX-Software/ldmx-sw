
name: Tests

# we are going to run this action whenever we push to trunk or make a PR onto 
# trunk
on:
  push:
    branches: [ trunk ]
  pull_request:
    branches: [ trunk ]

jobs:
  # this action only has one job
  build-test:
    # run the commands on ubuntu with bash shell
    runs-on: ubuntu-latest
    env:
      image: ldmx/dev:v1.0
    defaults:
      run:
        shell: bash

    steps:
    # check out ldmx-sw in the workspace
    - uses: actions/checkout@v2
    - uses: textbook/git-checkout-submodule-action@master

    # Setup our ldmx development environment
    - name: Setup ldmx environment
      run: docker pull $image
    
    # configure ldmx-sw using the docker environment
    - name: Configure the build
      run: |
          mkdir build &&
          docker run -i -v $(pwd):$(pwd) $image $(pwd)/build cmake ..

    # build ldmx-sw using the docker environment
    - name: Build and Install
      run: docker run -i -v $(pwd):$(pwd) $image $(pwd)/build make install

    # Run the test using ctest. The --verbose parameter displays the output 
    # you would typically see with catch.
    - name: Test the build
      run: |
          cd ../ &&
          export LDMX_BASE=$(pwd) &&
          docker run -i -e LDMX_BASE -v $(pwd):$(pwd) $image $LDMX_BASE/ldmx-sw/build ctest --verbose 

    # The rest of the steps are building docs
    #   Since the build is made and tested above,
    #   the docs are only updated if the build passes

    # Runs doxygen doxygen.conf in the docs/ directory
    - name: Run Doxygen to build C++ Docs
      uses: mattnotmitt/doxygen-action@v1.1.0
      with:
        doxyfile-path: doxygen.conf/doxyfile #relative to working directory
        working-directory: docs #docs subdirectory

    # sphinx is a python package, so we need to setup python on this runner
    - name: Setup Python for Sphinx
      uses: actions/setup-python@v2
      with:
        python-version: 3.6
    
    # Runs sphinx-apidoc and sphinx-build in the docs/ directory
    #   sphinx-apidoc requires the python files to be packaged together
    #   like a python module would be. The simplest way to achieve
    #   this form is to build and install ldmx-sw.
    - name: Run Sphinx to build python Docs
      run: |
          python3 -m pip install -U pip
          python3 -m pip install Sphinx Pillow groundwork-sphinx-theme
          sphinx-apidoc --force --no-toc -o docs/sphinx.conf/ install/python
          sudo `which sphinx-build` docs/sphinx.conf docs/html/_sphinx

    # Copy the generated documentation to the github pages repo
    #   This copies all the html files in the docs/html directory to the github.io repository
    #   using the ldmx organization token for access and saving the changes with the
    #   commit message of the commit that activated this action
    - name: Deploy the Docs
      if: ${{ github.event_name == 'push' }} #only deploy when the trunk actually changes
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.LDMX_ORG_TOKEN }} #requires setup to connect ldmx-sw and ldmx-sw.github.io
        commit_message: ${{ github.event.head_commit.message }}
        external_repository: LDMX-Software/ldmx-software.github.io
        publish_branch: trunk 
        publish_dir: ./docs/html
        enable_jekyll: true #allow github pages to process using jekyll
        keep_files: true #keep old files (by default, clears publish_dir before deploying to it)

